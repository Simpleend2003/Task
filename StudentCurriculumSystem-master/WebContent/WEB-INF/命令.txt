/*建立班级表*/
create table 班级(
班级编号 nvarchar(4) primary key,
班级名称 nvarchar(20) not null,
)

/*建立学生表*/
create table 学生(
学号 nvarchar(12) primary key,
姓名 nvarchar(5) not null,
性别 nvarchar(1) not null,
年龄 int not null,
生源所在地 nvarchar(20) not null,
已修学分总数 float ,
登录密码 nvarchar(20) not null ,
班级编号 nvarchar(4) ,
constraint FK_班级编号 foreign key(班级编号) references 班级
)

/*建立课程表*/
create table 课程(
课程编号 nvarchar(5) primary key,
课程名称 nvarchar(20) not null,
学时 int not null,
考试或考查 bit not null ,
学分 float not null ,
)

/*建立教师表*/
create table 教师(
教师编号 nvarchar(5) primary key,
姓名 nvarchar(20) not null,
性别 nvarchar(1) not null,
年龄 int not null,
职称 nvarchar(10) not null,
电话 nvarchar(20) not null ,
登录密码 nvarchar(20) not null ,
)

/*建立开课情况表*/
create table 开课情况(
开课编号 nvarchar(15) primary key,
课程编号 nvarchar(5) not null,
任课教师编号 nvarchar(5) not null,
开课学年 nvarchar(4) not null,
开课学期 bit not null,
constraint FK_课程编号_开课 foreign key(课程编号) references 课程编号,
constraint FK_任课教师编号_开课 foreign key(任课教师编号) references 教师,
)

/*建立选课情况表*/
create table 选课情况(
开课编号 nvarchar(15),
学号 nvarchar(12),
成绩 float,
primary key(开课编号,学号),
constraint FK_开课编号_选课 foreign key(开课编号) references 开课情况,
constraint FK_学号_选课 foreign key(学号) references 学生,
)

/*建立管理员表*/
create table 管理员(
管理员编号 nvarchar(4) primary key ,
登录密码 nvarchar(20) not null,
)

/*建立未选课临时表*/
create table 未选课(
开课编号 nvarchar(15) primary key,
课程编号 nvarchar(5) not null,
任课教师编号 nvarchar(5) not null,
开课学年 nvarchar(4) not null,
开课学期 bit not null,
)

/*建立未开课临时表*/
CREATE TABLE 未开课(
课程编号 nvarchar(5) primary key,
课程名称 nvarchar(20) not null,
学时 int not null,
考试或考查 bit not null ,
学分 float not null ,
)

/*向班级表插入数据*/
insert into 班级
values
('1001','001','软工1701')
,('1002','001','软工1702')
,('1003','001','软工1703')
,('1004','001','软工1801')
,('1005','001','软工1802')
,('1006','001','软工1803')
,('2001','002','计科1701')
,('2002','002','计科1702')
,('2003','002','计科1703')
,('2004','002','计科1801')
,('2005','002','计科1802')
,('2006','002','计科1803')
,('3001','003','网工1701')
,('3002','003','网工1801')
select * from 班级

/*向学生表插入数据*/
insert into 学生
values
('201706060101','李一','男',19,'浙江杭州',40,'123456','1001')
,('201706060102','李天欣','女',19,'浙江宁波',40,'123456','1001')
,('201706060103','郭文心','女',19,'浙江台州',40,'123456','1001')
,('201706060104','金涛','男',19,'浙江嘉兴',40,'123456','1001')
,('201706060105','王天音','女',19,'浙江金华',40,'123456','1001')
,('201706060106','林月人','男',19,'上海静安',40,'123456','1001')
,('201706060107','肖金鹏','男',19,'上海徐汇',40,'123456','1001')
,('201706060108','魏征','男',19,'浙江杭州',35,'123456','1001')
,('201706060110','李浩然','男',19,'浙江温州',40,'123456','1001')
,('201706060111','尤宏博','男',19,'浙江宁波',40,'123456','1001')
,('201706060112','郑莉莉','女',19,'浙江台州',40,'123456','1001')
,('201706070101','汤飞扬','男',19,'浙江杭州',20,'123456','2001')
,('201706070102','侯蒙蒙','男',19,'浙江宁波',20,'123456','2001')
,('201706070103','罗婷婷','女',19,'浙江台州',20,'123456','2001')
,('201706070104','金铭','男',19,'浙江嘉兴',20,'123456','2001')
,('201706070105','王萱萱','女',19,'浙江金华',20,'123456','2001')
,('201706070106','林国庆','男',19,'上海静安',20,'123456','2001')
,('201706070107','肖元宵','男',19,'上海徐汇',20,'123456','2001')
,('201706070108','庄晓曼','女',19,'浙江杭州',15,'123456','2001')
,('201706070110','吕齐铭','男',19,'浙江温州',20,'123456','2001')
,('201706070111','陈欣怡','女',19,'浙江宁波',20,'123456','2001')
,('201706070112','张世豪','男',19,'浙江台州',20,'123456','2001')
，('201706060109','张佳琪','男',19,'浙江丽水',38,'123456','1001')
,('201706070109','蒋博文','男',19,'浙江丽水',18,'123456','2001')
select * from 学生

/*向课程表插入数据*/
insert into 课程
values
('J0001','数据结构',64,0,4)
,('J0002','C++程序设计',64,0,4)
,('J0003','数据库原理及应用',48,0,3)
,('J0004','机器学习',36,1,2)
,('J0005','Java程序设计',48,0,3)
,('J0006','操作系统原理',48,0,3)
,('L0001','高等数学',48,0,3)
,('M0001','马克思主义基本原理',48,0,3)
,('M0002','毛泽东思想概论',64,0,4)
,('J0007','编译原理',48,0,3)
,('L0002','信息论基础',36,0,3)
,('J0008','软件工程',48,1,3)
select * from 课程


/*向教师表插入数据*/
insert into 教师
values
 ('T0001','李强','男',34,'讲师','13989895985','123456','001')
, ('T0002','陆伟','男',44,'副教授','13789455985','123456','001')
, ('T0003','何霜','女',51,'教授','13289458985','123456','001')
, ('T0004','刘值','男',29,'讲师','13459845985','123456','001')
, ('T0005','黄国庆','男',42,'副教授','13449894945','123456','001')
, ('T0006','杨永利','男',49,'副教授','13945895455','123456','001')
, ('T0007','洪邓媛','女',51,'教授','13983295325','123456','008')
, ('T0008','余海潮','男',58,'教授','13915895155','123456','001')
, ('T0009','马美玉','女',40,'讲师','13915891985','123456','008')
, ('T0010','张超','男',39,'讲师','13129895155','123456','001')
select * from 教师

/*向开课情况表插入数据*/
insert into 开课情况
values
,('J0001T000120180','J0001','T0001','2018',0)
,('J0001T000520180','J0001','T0005','2018',0)
,('J0003T000220181','J0003','T0002','2018',1)
,('J0003T000320181','J0003','T0003','2018',1)
,('J0004T000320181','J0004','T0003','2018',1)
,('J0004T000420181','J0004','T0004','2018',1)
,('M0002T000720181','M0002','T0007','2018',1)
,('J0005T000420180','J0005','T0004','2018',0)
,('J0006T000820190','J0006','T0008','2019',0)
,('J0006T000120190','J0006','T0001','2019',0)
,('J0006T001020190','J0006','T0010','2019',0)
,('J0007T000120190','J0007','T0001','2019',0)
,('J0008T000720190','J0008','T0007','2019',0)
,('L0002T000820190','L0002','T0008','2019',0)

select * from 开课情况

/*向选课情况插入数据*/
insert into 选课情况
values
('J0001T000120180','201706060101',98)
,('J0001T000120180','201706060102',88)
,('J0001T000120180','201706060103',45)
,('J0001T000120180','201706060104',59)
,('J0001T000120180','201706060105',68)
,('J0001T000120180','201706060106',78)
,('J0001T000120180','201706060107',82)
,('J0001T000120180','201706060108',92)
,('J0001T000120180','201706060109',94)
,('J0001T000120180','201706060110',91)
,('J0001T000120180','201706060111',76)
,('J0001T000120180','201706060112',78)
,('J0001T000520180','201706070101',95)
,('J0001T000520180','201706070102',85)
,('J0001T000520180','201706070103',47)
,('J0001T000520180','201706070104',57)
,('J0001T000520180','201706070105',67)
,('J0001T000520180','201706070106',74)
,('J0001T000520180','201706070107',95)
,('J0001T000520180','201706070108',97)
,('J0001T000520180','201706070109',92)
,('J0001T000520180','201706070110',97)
,('J0001T000520180','201706070111',71)
,('J0001T000520180','201706070112',74)
,('J0003T000220181','201706060101',78)
,('J0003T000220181','201706060102',99)
,('J0003T000220181','201706060103',100)
,('J0003T000220181','201706060104',98.5)
,('J0003T000220181','201706060105',59.5)
,('J0003T000220181','201706060106',68)
,('J0003T000220181','201706060107',69)
,('J0003T000220181','201706060108',79)
,('J0003T000220181','201706060109',89)
,('J0003T000220181','201706060110',95)
,('J0003T000220181','201706060111',98)
,('J0003T000220181','201706060112',98)
,('J0003T000320181','201706070101',74)
,('J0003T000320181','201706070102',94)
,('J0003T000320181','201706070103',78)
,('J0003T000320181','201706070104',94.5)
,('J0003T000320181','201706070105',59.5)
,('J0003T000320181','201706070106',61)
,('J0003T000320181','201706070107',61)
,('J0003T000320181','201706070108',75)
,('J0003T000320181','201706070109',85)
,('J0003T000320181','201706070110',94)
,('J0003T000320181','201706070111',94)
,('J0003T000320181','201706070112',94)
,('J0004T000320181','201706060101',58)
,('J0004T000320181','201706060102',92)
,('J0004T000320181','201706060103',65)
,('J0004T000320181','201706060104',67)
,('J0004T000320181','201706060105',68)
,('J0004T000320181','201706060106',78)
,('J0004T000320181','201706060107',88)
,('J0004T000320181','201706060108',89)
,('J0004T000320181','201706060109',90)
,('J0004T000320181','201706060110',95)
,('J0004T000320181','201706060111',91)
,('J0004T000320181','201706060112',92)
,('J0004T000420181','201706070101',54)
,('J0004T000420181','201706070102',94)
,('J0004T000420181','201706070103',64)
,('J0004T000420181','201706070104',64)
,('J0004T000420181','201706070105',64)
,('J0004T000420181','201706070106',74)
,('J0004T000420181','201706070107',84)
,('J0004T000420181','201706070108',84)
,('J0004T000420181','201706070109',98)
,('J0004T000420181','201706070110',98)
,('J0004T000420181','201706070111',98)
,('J0004T000420181','201706070112',97)
,('M0002T000720181','201706060101',68)
,('M0002T000720181','201706060102',91)
,('M0002T000720181','201706060103',95)
,('M0002T000720181','201706060104',87)
,('M0002T000720181','201706060105',88)
,('M0002T000720181','201706060106',68)
,('M0002T000720181','201706060107',88)
,('M0002T000720181','201706060108',99)
,('M0002T000720181','201706060109',70)
,('M0002T000720181','201706060110',75)
,('M0002T000720181','201706060111',71)
,('M0002T000720181','201706060112',92)
,('M0002T000720181','201706070101',68)
,('M0002T000720181','201706070102',98)
,('M0002T000720181','201706070103',95)
,('M0002T000720181','201706070104',85)
,('M0002T000720181','201706070105',85)
,('M0002T000720181','201706070106',68)
,('M0002T000720181','201706070107',88)
,('M0002T000720181','201706070108',99)
,('M0002T000720181','201706070109',70)
,('M0002T000720181','201706070110',75)
,('M0002T000720181','201706070111',71)
,('M0002T000720181','201706070112',91)
,('J0005T000420180','201706060101',null)
,('J0005T000420180','201706060102',null)
,('J0005T000420180','201706060103',null)
,('J0005T000420180','201706060104',null)
,('J0005T000420180','201706060105',null)
,('J0005T000420180','201706060106',null)
,('J0005T000420180','201706060107',null)
,('J0005T000420180','201706060108',null)
,('J0005T000420180','201706060109',null)
,('J0005T000420180','201706060110',null)
,('J0005T000420180','201706060111',null)
,('J0005T000420180','201706060112',null)
select * from 选课情况

/*向管理员表插入数据*/
insert into 管理员 values('A001','123456')

/*建立学生成绩统计视图*/
create view 学生成绩统计(学号,姓名,学年,学期,课程名称,成绩,开课编号,教师编号,课程编号,已修学分总数)
as
select 选课情况.学号,学生.姓名,开课学年,开课学期,课程名称,成绩,选课情况.开课编号,开课情况.任课教师编号,开课情况.课程编号,已修学分总数
from 选课情况, 课程,学生,开课情况
where 选课情况.学号= 学生.学号 
	AND 选课情况.开课编号=开课情况.开课编号 AND 开课情况.课程编号=课程.课程编号


/*建立每门课平均成绩视图*/
create view 每门课平均成绩(课程号,平均成绩)
as
select 开课编号,avg(成绩)
from 选课情况
group by 开课编号


/*建立学生所学课程及学分统计视图*/
create view 学生所学课程及学分统计(学号,姓名,课程名称,学分,课程编号,开课学年,开课学期,学时,考试或考察,开课编号)
as
select 选课情况.学号,学生.姓名,课程名称,学分,课程.课程编号,开课学年,开课学期,学时,考试或考查,选课情况.开课编号
from 课程,学生,选课情况,开课情况
where 选课情况.学号= 学生.学号 AND  开课情况.开课编号=选课情况.开课编号 AND 开课情况.课程编号=课程.课程编号

/*建立教师任课情况查询视图*/
create view 教师任课查询(教师编号,姓名,课程编号,课程名称,开课编号,开课学年,开课学期,学时,学分,考试或考察)
as
select 教师.教师编号, 姓名,
     课程.课程编号, 课程名称,开课编号,开课学年,开课学期,学时, 学分,考试或考察
from 教师,课程,开课情况
where 开课情况.课程编号=课程.课程编号 
and 开课情况.任课教师编号=教师.教师编号


/*建立单门课学分绩点统计视图*/
create view 单门课学分绩点统计(学号,姓名,开课编号,课程名称,课程学分绩点)
as
select 学生.学号,姓名,选课情况.开课编号,课程名称,(1+(成绩-60)*0.1)*学分
from 学生,选课情况,课程,开课情况
where 成绩>=60 and 选课情况.开课编号=开课情况.开课编号 and 学生.学号=选课情况.学号 and 开课情况.课程编号=课程.课程编号
union 
select 学生.学号,姓名,选课情况.开课编号,课程名称,0
from 学生,选课情况,课程,开课情况
where 成绩<60 and 选课情况.开课编号=开课情况.开课编号 and 学生.学号=选课情况.学号 and 开课情况.课程编号=课程.课程编号
union 
select 学生.学号,姓名,选课情况.开课编号,课程名称,null
from 学生,选课情况,课程,开课情况
where 成绩 is null  and 选课情况.开课编号=开课情况.开课编号 and 学生.学号=选课情况.学号 and 开课情况.课程编号=课程.课程编号

/*建立均绩视图*/
create view 均绩(学号,均绩)
as
select 学号,sum(课程学分绩点)/sum(学分)
from 单门课学分绩点统计,课程,开课情况
where 单门课学分绩点统计.开课编号=开课情况.开课编号 and 课程学分绩点 is not null and 课程.课程编号=开课情况.课程编号
group by 学号

/* 触发器-删除学生时联级删除学习 */
ALTER TRIGGER [dbo].[删除学生]  
ON [dbo].[学生]  
INSTEAD OF DELETE  
AS  
    DELETE FROM 选课情况  
    WHERE 学号 IN(  
        SELECT 学号 FROM  DELETED  
    )  
    DELETE FROM 学生  
    WHERE 学号 IN(  
        SELECT 学号 FROM  DELETED  
    )  


/*建立查找未选课程的存储过程*/
CREATE PROCEDURE 查找未选课程
@学号 nvarchar(12)
,@学年 varchar(4)
,@学期 bit
AS
BEGIN	
	DELETE FROM 未选课
	DECLARE @id varchar(20),@courseId varchar(5),@teacherID varchar(5),@year varchar(4),@term bit
	DECLARE none_choose CURSOR FOR --定义游标
    SELECT * FROM 开课情况
	WHERE 开课学年=@学年 AND 开课学期=@学期
	OPEN none_choose --打开游标
	FETCH NEXT FROM none_choose INTO  @id,@courseId,@teacherID,@year,@term  --抓取下一行游标数据
	WHILE @@FETCH_STATUS = 0
		BEGIN
			IF NOT EXISTS(SELECT * FROM 选课情况 WHERE 学号=@学号 AND 开课编号=@id)
				INSERT INTO 未选课 VALUES (@id,@courseId,@teacherID,@year,@term)
			FETCH NEXT FROM none_choose INTO  @id,@courseId,@teacherID,@year,@term
		END
	CLOSE none_choose --关闭游标
	DEALLOCATE none_choose --释放游标
END

/*建立查找某位老师未开课程的存储过程*/
CREATE PROCEDURE 查找未开课程
@教师编号 nvarchar(5)
,@学年 varchar(4)
,@学期 bit
AS
BEGIN	
	DELETE FROM 未开课
	DECLARE @id varchar(5),@coursename varchar(20),@time int,@testway bit,@credit float
	DECLARE none_set CURSOR FOR --定义游标
    SELECT * FROM 课程
	OPEN none_set --打开游标
	FETCH NEXT FROM none_set INTO  @id,@coursename,@time,@testway,@credit  --抓取下一行游标数据
	WHILE @@FETCH_STATUS = 0
		BEGIN
			IF NOT EXISTS(SELECT * FROM 开课情况 WHERE 任课教师编号=@教师编号 AND 开课学年=@学年 AND 开课学期=@学期 AND 课程编号=@id)
				INSERT INTO 未开课 VALUES (@id,@coursename,@time,@testway,@credit)
			FETCH NEXT FROM none_set INTO  @id,@coursename,@time,@testway,@credit
		END
	CLOSE none_set --关闭游标
	DEALLOCATE none_set --释放游标
END

/*建立更新已修学分的存储过程*/
IF (OBJECT_ID('更新已修学分') IS NOT NULL)
DROP PROCEDURE 更新已修学分
GO
CREATE PROCEDURE 更新已修学分
@学号 nvarchar(12)
AS
BEGIN
	UPDATE 学生
	SET 已修学分总数 = (
		SELECT SUM(学分)
		FROM 课程
		WHERE 课程.课程编号 IN (
			SELECT 开课情况.课程编号
			FROM 开课情况,选课情况
			WHERE 成绩 >= 60 AND 选课情况.学号 =@学号 AND 选课情况.开课编号=开课情况.开课编号
		)
	)
	WHERE 学生.学号 = @学号
END
